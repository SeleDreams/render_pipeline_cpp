#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: '{branch}-{build}'

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
skip_commits:
    files:
        - docs/*


#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image:
- Ubuntu
- Visual Studio 2015
- Visual Studio 2017


# set clone depth
clone_depth: 1


# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if (($isLinux) -and ($env:CONFIGURATION -eq "Debug") -and (Test-Path env:TRIGGER_NAME)) {
        Update-AppveyorBuild -Message "Build by $env:TRIGGER_BUILD_VERSION in $env:TRIGGER_NAME"
    }
# checkout recent vcpkg
- ps: >-
    if ($isWindows) {

    pushd C:\tools\vcpkg

    git pull --quiet

    git checkout -qf 7baf25786d2d4adb827ec4531d2fc2cb1fb0d5a6

    .\bootstrap-vcpkg.bat > $null

    .\vcpkg version

    popd

    } else {

    pushd /home/appveyor/projects

    git clone -q https://github.com/Microsoft/vcpkg.git

    pushd vcpkg

    git checkout -qf 7baf25786d2d4adb827ec4531d2fc2cb1fb0d5a6

    ./bootstrap-vcpkg.sh

    ./vcpkg version

    popd -and popd

    }
- git --version
- cmake --version


# environment variables
environment:
    CMAKE_PREFIX_PATH: C:\projects\_install;
    INSTALL_PREFIX: C:/projects/_install
    BOOST_ROOT: C:\Libraries\boost_1_67_0
    FREETYPE_DIR: C:\projects\_install\panda3d-thirdparty\win-libs-vc14-x64\freetype
    VCPKG_DEFAULT_TRIPLET: x64-windows
    VCPKG_ROOT: C:/tools/vcpkg


# this is how to allow failing jobs in the matrix
matrix:
    fast_finish: true   # set this flag to immediately finish build once one of the jobs fails.
    allow_failures:
        - image: Ubuntu # Sometimes, Ubuntu fails without any reason.
    exclude:
        - configuration: Debug
          image: Visual Studio 2015


# build cache to preserve files/folders between builds
cache:
    - c:\tools\vcpkg\installed\ -> .appveyor.yml


# scripts that run after cloning repository
install:
- ps: mkdir $env:INSTALL_PREFIX
- ps: pushd $env:INSTALL_PREFIX
- ps: >-
    if ($isLinux) {

    $VCPKG_ROOT/vcpkg install fmt spdlog

    sudo apt-get install --yes --no-install-recommends libfreetype6-dev

    Start-FileDownload ('https://ci.appveyor.com/api/projects/bluekyu/panda3d/artifacts/panda3d.tar.xz?branch=master&job=Image%3A+Ubuntu%3B+Configuration%3A+' + "$env:CONFIGURATION")

    tar xf panda3d.tar.xz

    } else {

    vcpkg install fmt spdlog yaml-cpp eigen3 assimp

    if ($env:CONFIGURATION -eq "Debug") {
        Start-FileDownload 'https://ci.appveyor.com/api/projects/bluekyu/panda3d-thirdparty/artifacts/panda3d-thirdparty.7z?branch=master&job=Configuration%3A+MixForDebug'
    } else {
        Start-FileDownload 'https://ci.appveyor.com/api/projects/bluekyu/panda3d-thirdparty/artifacts/panda3d-thirdparty.7z?branch=master&job=Configuration%3A+Release'
    }

    7z x -y panda3d-thirdparty.7z > $null

    Start-FileDownload ('https://ci.appveyor.com/api/projects/bluekyu/panda3d/artifacts/panda3d.7z?branch=master&job=Image%3A+Visual+Studio+2017%3B+Configuration%3A+' + "$env:CONFIGURATION")

    7z x -y panda3d.7z > $null

    }
- ps: popd


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build Configuration, i.e. Debug, Release, etc.
configuration:
- Debug
- Release

build:
    parallel: true                  # enable MSBuild parallel builds


# to run your custom scripts instead of automatic MSBuild
build_script:
- ps: mkdir _build
- ps: pushd _build

# Ubuntu
- sh: >-
    cmake -G "$CMAKE_GENERATOR" -Wno-dev ..
    -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
    -DVCPKG_APPLOCAL_DEPS:BOOL=OFF
    -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX/render_pipeline_cpp"
    -Dpanda3d_ROOT:PATH="$INSTALL_PREFIX/panda3d"

# Visual Studio
- cmd: >-
    cmake -G "%CMAKE_GENERATOR%" -Wno-dev ..
    -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake"
    -DVCPKG_APPLOCAL_DEPS:BOOL=OFF
    -DCMAKE_INSTALL_PREFIX="%INSTALL_PREFIX%/render_pipeline_cpp"
    -Dpanda3d_ROOT:PATH="%INSTALL_PREFIX%/panda3d"

- cmake --build . --config $env:CONFIGURATION
- ps: popd


#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:

after_test:
- cmake --build _build --config $env:CONFIGURATION --target install

# Ubuntu
- sh: pushd "$INSTALL_PREFIX"
- sh: tar cJf "$APPVEYOR_BUILD_FOLDER/render_pipeline_cpp.tar.xz" "render_pipeline_cpp"
- sh: popd

# Visual Studio
- cmd: 7z a render_pipeline_cpp.7z "%INSTALL_PREFIX%/render_pipeline_cpp"

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
- ps: >-
    if (($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2017") -and ($env:CONFIGURATION -eq "Release") -and ($env:APPVEYOR_REPO_BRANCH -eq "master")) {
        Start-AppveyorBuild -ApiKey $env:api_key -ProjectSlug 'rpcpp-plugins' -EnvironmentVariables @{
            TRIGGER_NAME = $env:APPVEYOR_PROJECT_NAME
            TRIGGER_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION
        }
    }

#---------------------------------#
#       specializing matrix       #
#---------------------------------#

for:
-
    matrix:
        only:
            - image: Ubuntu
    environment:
        CMAKE_GENERATOR: Unix Makefiles
        CMAKE_PREFIX_PATH: /home/appveyor/projects/_install;/home/appveyor/projects/_cache
        CACHE_PREFIX: /home/appveyor/projects/_cache
        INSTALL_PREFIX: /home/appveyor/projects/_install
        BOOST_ROOT: ""
        FREETYPE_DIR: ""
        VCPKG_DEFAULT_TRIPLET: x64-linux
        VCPKG_ROOT: /home/appveyor/projects/vcpkg
    cache:
        - /home/appveyor/projects/_cache/ -> .appveyor.yml
    artifacts:
        - path: render_pipeline_cpp.tar.xz

-
    matrix:
        only:
            - image: Visual Studio 2015
    environment:
        CMAKE_GENERATOR: Visual Studio 14 2015 Win64

    artifacts:
        - path: render_pipeline_cpp.7z

-
    matrix:
        only:
            - image: Visual Studio 2017

    environment:
        CMAKE_GENERATOR: Visual Studio 15 2017 Win64

    artifacts:
        - path: render_pipeline_cpp.7z
